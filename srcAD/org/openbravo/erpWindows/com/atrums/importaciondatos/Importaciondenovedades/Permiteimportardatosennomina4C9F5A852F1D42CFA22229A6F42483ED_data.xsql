<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="Permiteimportardatosennomina4C9F5A852F1D42CFA22229A6F42483EDData" package="org.openbravo.erpWindows.com.atrums.importaciondatos.Importaciondenovedades">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(IDT_novedad.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = IDT_novedad.CreatedBy) as CreatedByR, 
        to_char(IDT_novedad.Updated, ?) as updated, 
        to_char(IDT_novedad.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        IDT_novedad.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = IDT_novedad.UpdatedBy) as UpdatedByR,
        IDT_novedad.I_Errormsg, 
IDT_novedad.C_Bpartner_ID, 
(CASE WHEN IDT_novedad.C_Bpartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
IDT_novedad.AD_Org_ID, 
(CASE WHEN IDT_novedad.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
IDT_novedad.Cedula, 
COALESCE(IDT_novedad.Isactive, 'N') AS Isactive, 
IDT_novedad.NO_Tipo_Ingreso_Egreso_ID, 
(CASE WHEN IDT_novedad.NO_Tipo_Ingreso_Egreso_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS NO_Tipo_Ingreso_Egreso_IDR, 
IDT_novedad.C_Period_ID, 
(CASE WHEN IDT_novedad.C_Period_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS C_Period_IDR, 
IDT_novedad.Valor, 
COALESCE(IDT_novedad.I_Isimported, 'N') AS I_Isimported, 
COALESCE(IDT_novedad.Novprocesada, 'N') AS Novprocesada, 
IDT_novedad.Procnovedad, 
IDT_novedad.AD_Client_ID, 
IDT_novedad.IDT_Novedad_ID, 
 
        ? AS LANGUAGE 
        FROM IDT_novedad left join (select C_BPartner_ID, Name from C_BPartner) table1 on (IDT_novedad.C_Bpartner_ID = table1.C_BPartner_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (IDT_novedad.AD_Org_ID = table2.AD_Org_ID) left join (select NO_Tipo_Ingreso_Egreso_ID, Name from NO_Tipo_Ingreso_Egreso) table3 on (IDT_novedad.NO_Tipo_Ingreso_Egreso_ID = table3.NO_Tipo_Ingreso_Egreso_ID) left join (select C_Period_ID, Name from C_Period) table4 on (IDT_novedad.C_Period_ID = table4.C_Period_ID)
        WHERE 2=2 

        AND 1=1 
        AND IDT_novedad.IDT_Novedad_ID = ? 
        AND IDT_novedad.AD_Client_ID IN ('1') 
           AND IDT_novedad.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="IDT_novedad.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="IDT_novedad.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="noTipoIngresoEgresoId"></Parameter><Parameter name="cPeriodId"></Parameter><Parameter name="iErrormsg"></Parameter><Parameter name="valor"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="novprocesada"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="cedula"></Parameter><Parameter name="iIsimported"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="procnovedad"></Parameter><Parameter name="idtNovedadId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDefB005003A62AA4802B975637B50FD6AFE_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as C_Bpartner_ID FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table2 on (C_BPartner.C_BPartner_ID = table2.C_BPartner_ID) WHERE C_BPartner.isActive='Y' AND C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_Bpartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefB0C76F5BB7CE472D913DF5C16FAD3FD4_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Updatedby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefD1DB08C80397422F8A8757231E083DF5_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Createdby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE IDT_novedad
        SET I_Errormsg = (?) , C_Bpartner_ID = (?) , AD_Org_ID = (?) , Cedula = (?) , Isactive = (?) , NO_Tipo_Ingreso_Egreso_ID = (?) , C_Period_ID = (?) , Valor = TO_NUMBER(?) , I_Isimported = (?) , Novprocesada = (?) , Procnovedad = (?) , AD_Client_ID = (?) , IDT_Novedad_ID = (?) , updated = now(), updatedby = ? 
        WHERE IDT_novedad.IDT_Novedad_ID = ? 
        
        AND IDT_novedad.AD_Client_ID IN ('1') 
        AND IDT_novedad.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="iErrormsg"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cedula"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="noTipoIngresoEgresoId"></Parameter> <Parameter name="cPeriodId"></Parameter> <Parameter name="valor"></Parameter> <Parameter name="iIsimported"></Parameter> <Parameter name="novprocesada"></Parameter> <Parameter name="procnovedad"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="idtNovedadId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="idtNovedadId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="IDT_novedad.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="IDT_novedad.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO IDT_novedad 
        (I_Errormsg, C_Bpartner_ID, AD_Org_ID, Cedula, Isactive, NO_Tipo_Ingreso_Egreso_ID, C_Period_ID, Valor, I_Isimported, Novprocesada, Procnovedad, AD_Client_ID, IDT_Novedad_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="iErrormsg"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="cedula"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="noTipoIngresoEgresoId"></Parameter> <Parameter name="cPeriodId"></Parameter> <Parameter name="valor"></Parameter> <Parameter name="iIsimported"></Parameter> <Parameter name="novprocesada"></Parameter> <Parameter name="procnovedad"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="idtNovedadId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM IDT_novedad
        WHERE IDT_novedad.IDT_Novedad_ID = ? 
        
        AND IDT_novedad.AD_Client_ID IN ('1') 
        AND IDT_novedad.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="IDT_novedad.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="IDT_novedad.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM IDT_novedad
         WHERE IDT_novedad.IDT_Novedad_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM IDT_novedad
         WHERE IDT_novedad.IDT_Novedad_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>