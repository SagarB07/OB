<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="RegistroPrestamosEAE8C067A95849F89D14E8489E481119Data" package="org.openbravo.erpWindows.com.atrums.nomina.RegistrarPrestamos">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(no_prestamo.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = no_prestamo.CreatedBy) as CreatedByR, 
        to_char(no_prestamo.Updated, ?) as updated, 
        to_char(no_prestamo.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        no_prestamo.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = no_prestamo.UpdatedBy) as UpdatedByR,
        no_prestamo.AD_Org_ID, 
(CASE WHEN no_prestamo.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Org_IDR, 
no_prestamo.C_Bpartner_ID, 
(CASE WHEN no_prestamo.C_Bpartner_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS C_Bpartner_IDR, 
no_prestamo.NO_Tipo_Ingreso_Egreso_ID, 
(CASE WHEN no_prestamo.NO_Tipo_Ingreso_Egreso_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'') ) END) AS NO_Tipo_Ingreso_Egreso_IDR, 
no_prestamo.Valor_Prestamo, 
no_prestamo.Meses_Cuota, 
no_prestamo.C_Period_ID, 
(CASE WHEN no_prestamo.C_Period_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table4.Name), ''))),'') ) END) AS C_Period_IDR, 
no_prestamo.Valor_Cuota, 
no_prestamo.Docaction_Pro, 
list1.name as Docaction_Pro_BTN, 
no_prestamo.AD_Client_ID, 
COALESCE(no_prestamo.Processed, 'N') AS Processed, 
no_prestamo.NO_Prestamo_ID, 
 
        ? AS LANGUAGE 
        FROM no_prestamo left join (select AD_Org_ID, Name from AD_Org) table1 on (no_prestamo.AD_Org_ID = table1.AD_Org_ID) left join (select C_BPartner_ID, Name from C_BPartner) table2 on (no_prestamo.C_Bpartner_ID = table2.C_BPartner_ID) left join (select NO_Tipo_Ingreso_Egreso_ID, Name from NO_Tipo_Ingreso_Egreso) table3 on (no_prestamo.NO_Tipo_Ingreso_Egreso_ID = table3.NO_Tipo_Ingreso_Egreso_ID) left join (select C_Period_ID, Name from C_Period) table4 on (no_prestamo.C_Period_ID = table4.C_Period_ID) left join ad_ref_list_v list1 on (list1.ad_reference_id = '135' and list1.ad_language = ?  AND no_prestamo.Docaction_Pro = TO_CHAR(list1.value))
        WHERE 2=2 

        AND 1=1 
        AND no_prestamo.NO_Prestamo_ID = ? 
        AND no_prestamo.AD_Client_ID IN ('1') 
           AND no_prestamo.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="no_prestamo.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="no_prestamo.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="docactionPro"></Parameter><Parameter name="docactionProBtn"></Parameter><Parameter name="noPrestamoId"></Parameter><Parameter name="valorCuota"></Parameter><Parameter name="processed"></Parameter><Parameter name="cBpartnerId"></Parameter><Parameter name="cBpartnerIdr"></Parameter><Parameter name="valorPrestamo"></Parameter><Parameter name="mesesCuota"></Parameter><Parameter name="noTipoIngresoEgresoId"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="cPeriodId"></Parameter><Parameter name="adClientId"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef6A2C176BFD0D460DB18BCBE46E097D40_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as C_Bpartner_ID FROM C_BPartner left join (select C_BPartner_ID, Name from C_BPartner) table2 on (C_BPartner.C_BPartner_ID = table2.C_BPartner_ID) WHERE C_BPartner.isActive='Y' AND C_BPartner.C_BPartner_ID = ?  
    ]]></Sql>
<Parameter name="C_Bpartner_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDefADF209E56E6645F8812DDCA6EDB63F5D_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Createdby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefDBF99FB00B87453FBCA3FCB6B49E2D69_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))), '') ) as Updatedby FROM AD_User left join (select AD_User_ID, Name from AD_User) table2 on (AD_User.AD_User_ID = table2.AD_User_ID) WHERE AD_User.isActive='Y' AND AD_User.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefDFF59885E3104868BE3E88797C26B8A7" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT P.C_PERIOD_ID AS DEFAULTVALUE FROM C_PERIOD P WHERE EXISTS (SELECT * FROM C_PERIODCONTROL PC WHERE P.C_PERIOD_ID=PC.C_PERIOD_ID AND UPPER(PC.PERIODSTATUS)='O') AND EXISTS(SELECT * FROM C_CALENDAR C, C_YEAR Y WHERE Y.C_CALENDAR_ID=C.C_CALENDAR_ID AND P.C_YEAR_ID=Y.C_YEAR_ID AND AD_ISORGINCLUDED(?, C.AD_ORG_ID, ?)<> -1) AND P.AD_CLIENT_ID=? AND NOW() BETWEEN STARTDATE AND ENDDATE 
    ]]></Sql>

<Parameter name="AD_ORG_ID"/>
<Parameter name="AD_CLIENT_ID"/>
<Parameter name="AD_CLIENT_ID"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE no_prestamo
        SET AD_Org_ID = (?) , C_Bpartner_ID = (?) , NO_Tipo_Ingreso_Egreso_ID = (?) , Valor_Prestamo = TO_NUMBER(?) , Meses_Cuota = TO_NUMBER(?) , C_Period_ID = (?) , Valor_Cuota = TO_NUMBER(?) , Docaction_Pro = (?) , AD_Client_ID = (?) , Processed = (?) , NO_Prestamo_ID = (?) , updated = now(), updatedby = ? 
        WHERE no_prestamo.NO_Prestamo_ID = ? 
        
        AND no_prestamo.AD_Client_ID IN ('1') 
        AND no_prestamo.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="noTipoIngresoEgresoId"></Parameter> <Parameter name="valorPrestamo"></Parameter> <Parameter name="mesesCuota"></Parameter> <Parameter name="cPeriodId"></Parameter> <Parameter name="valorCuota"></Parameter> <Parameter name="docactionPro"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="noPrestamoId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="noPrestamoId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="no_prestamo.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="no_prestamo.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO no_prestamo 
        (AD_Org_ID, C_Bpartner_ID, NO_Tipo_Ingreso_Egreso_ID, Valor_Prestamo, Meses_Cuota, C_Period_ID, Valor_Cuota, Docaction_Pro, AD_Client_ID, Processed, NO_Prestamo_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), (?), TO_NUMBER(?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="cBpartnerId"></Parameter> <Parameter name="noTipoIngresoEgresoId"></Parameter> <Parameter name="valorPrestamo"></Parameter> <Parameter name="mesesCuota"></Parameter> <Parameter name="cPeriodId"></Parameter> <Parameter name="valorCuota"></Parameter> <Parameter name="docactionPro"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="processed"></Parameter> <Parameter name="noPrestamoId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM no_prestamo
        WHERE no_prestamo.NO_Prestamo_ID = ? 
        
        AND no_prestamo.AD_Client_ID IN ('1') 
        AND no_prestamo.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="no_prestamo.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="no_prestamo.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM no_prestamo
         WHERE no_prestamo.NO_Prestamo_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM no_prestamo
         WHERE no_prestamo.NO_Prestamo_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>