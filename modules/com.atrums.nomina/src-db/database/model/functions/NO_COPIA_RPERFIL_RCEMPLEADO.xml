<?xml version="1.0"?>
  <database name="FUNCTION NO_COPIA_RPERFIL_RCEMPLEADO">
    <function name="NO_COPIA_RPERFIL_RCEMPLEADO" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[v_ResultStr VARCHAR(2000):=''; 
v_Message VARCHAR(2000):=''; 
ITERADOR_RCUENTA RECORD;
ITERADOR_PERFIL RECORD;
v_acct_schema character varying(32);

BEGIN	
   
   DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID);
  v_ResultStr:='PInstanceNotFound';
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL);
  ALTER TABLE ne_perfil_rubro_line DISABLE TRIGGER ne_control_rubro_trg;  
   FOR ITERADOR_PERFIL IN
		
		SELECT C_BPARTNER_ID AS IDPARTNER, em_ne_perfil_rubro_id AS IDPERFIL
		FROM C_BPARTNER 
		WHERE em_ne_perfil_rubro_id IN (
										SELECT NE_PERFIL_RUBRO_ID 
										FROM NE_PERFIL_RUBRO 
										WHERE NE_PERFIL_RUBRO_ID IN (
																	SELECT NE_PERFIL_RUBRO_ID FROM NE_PERFIL_RUBRO_LINE  
																	WHERE CREATED<>UPDATED AND ISACTIVE = 'Y'
																	)
						)AND  C_BPARTNER_ID IN (
						SELECT C_BPARTNER_ID FROM NO_CONTRATO_EMPLEADO WHERE DOCSTATUS= 'CO'
						)
			
        LOOP
			
			delete from no_cb_empleado_acct where c_bpartner_id = ITERADOR_PERFIL.IDPARTNER;
			
			v_acct_schema := (select bp.em_ne_c_acctschema_id from c_bpartner bp where bp.c_bpartner_id = ITERADOR_PERFIL.IDPARTNER); 
			
           FOR ITERADOR_RCUENTA IN 
			select ad_client_id AS CLIENTE,ad_org_id AS SUC,
			createdby AS CREADOPOR, updatedby AS ACTUALIZADOPOR, 
			ne_debe_acct, ne_haber_acct, no_tipo_ingreso_egreso_id
                        from ne_perfil_rubro_line
                        where ne_perfil_rubro_id = (
			select  em_ne_perfil_rubro_id from c_bpartner where c_bpartner_id = ITERADOR_PERFIL.IDPARTNER
                        )
                
            LOOP
                    if ITERADOR_RCUENTA.ne_debe_acct is not null or ITERADOR_RCUENTA.ne_haber_acct is not null then
                        insert into no_cb_empleado_acct(
                            no_cb_empleado_acct_id, ad_client_id, ad_org_id,
                            isactive, created, createdby,
                            updated, updatedby, c_bpartner_id,
                            c_acctschema_id, no_cuenta_ingreso_acct, no_tipo_ingreso_egreso_id,
                            no_cuenta_egreso_acct
                            )
                        values(
                            get_uuid(), 
			    ITERADOR_RCUENTA.CLIENTE, 
			    ITERADOR_RCUENTA.SUC,
                            'Y', now(), 
			    ITERADOR_RCUENTA.CREADOPOR,
                            now(), 
			    ITERADOR_RCUENTA.ACTUALIZADOPOR, 
			    ITERADOR_PERFIL.IDPARTNER,
                            v_acct_schema, 
                            ITERADOR_RCUENTA.ne_debe_acct, 
			    ITERADOR_RCUENTA.no_tipo_ingreso_egreso_id,
                            ITERADOR_RCUENTA.ne_haber_acct
                        );					
                    end if;
					
            END LOOP;
			
			
			
       END LOOP;
	
	ALTER TABLE ne_perfil_rubro_line ENABLE TRIGGER ne_control_rubro_trg;
        v_Message:='@NO_EjecucionCorrecta@';
        DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message);
        AD_UPDATE_PINSTANCE(p_PInstance_ID, '100', 'Y', null, v_Message);
        RETURN;
  
  RETURN;
   EXCEPTION
    WHEN OTHERS THEN
        v_ResultStr:= '@ERROR=' || SQLERRM;        
	DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message);
        AD_UPDATE_PINSTANCE(p_PInstance_ID, '100', 'Y', 0, v_Message);
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr);
        raise EXCEPTION '%',v_ResultStr;
    RETURN;
END NO_COPIA_RPERFIL_RCEMPLEADO
]]></body>
    </function>
  </database>
