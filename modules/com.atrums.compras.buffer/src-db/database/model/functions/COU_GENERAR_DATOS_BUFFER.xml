<?xml version="1.0"?>
  <database name="FUNCTION COU_GENERAR_DATOS_BUFFER">
    <function name="COU_GENERAR_DATOS_BUFFER" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[v_ResultStr VARCHAR(2000):=''; 
    v_Message VARCHAR(2000):=''; 
    v_Result NUMBER:=1; 

    
    
    Cur_Parameter RECORD;
    Cur_ProductoBuffer RECORD;

    
    v_Client_ID VARCHAR(32); 
    v_Org_ID VARCHAR(32); 
    v_User_ID VARCHAR(32); 

    v_param_buffer_id VARCHAR(32); 
    v_warehouse_id VARCHAR(32); 
    v_tipo_documento VARCHAR(60); 
    v_mes_promedio NUMBER:=0;
    
BEGIN
   
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID);
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL);

    BEGIN 
    

        
        FOR Cur_Parameter IN
        (SELECT i.Record_ID,
                i.AD_User_ID,
                p.ParameterName,
                p.P_String,
                p.P_Number,
                p.P_Date,
                i.AD_Org_ID,
                i.AD_Client_ID
           FROM AD_PInstance i
           LEFT JOIN AD_PInstance_Para p
             ON i.AD_PInstance_ID=p.AD_PInstance_ID
          WHERE i.AD_PInstance_ID=p_PInstance_ID
          ORDER BY p.SeqNo)
        LOOP
            v_param_buffer_id:=Cur_Parameter.Record_ID;
            v_User_ID:=Cur_Parameter.AD_User_ID;
        END LOOP;
        

        
        
        
        SELECT ad_client_id, 
               ad_org_id, 
               m_warehouse_id, 
               tipo_documento, 
               mes_promedio
          INTO v_Client_ID,
               v_Org_ID,
               v_warehouse_id,
               v_tipo_documento,
               v_mes_promedio
          FROM cou_param_buffer
         WHERE cou_param_buffer_id = v_param_buffer_id;
         

        INSERT INTO cou_detalle_buffer 
        SELECT get_uuid() AS id, 
               v_Client_ID,
               v_Org_ID,
               'Y',
               CURRENT_TIMESTAMP,
               v_User_ID,
               CURRENT_TIMESTAMP,
               v_User_ID,
               v_param_buffer_id,
               v_warehouse_id,
               p.m_product_id, 
               COALESCE(cou_consumo_doc_mes(p.m_product_id, w.m_warehouse_id, v_tipo_documento, 0,'Y'),0),
               COALESCE(cou_consumo_doc_mes(p.m_product_id, w.m_warehouse_id, v_tipo_documento, 1,'Y'),0),
               COALESCE(cou_consumo_doc_mes(p.m_product_id, w.m_warehouse_id, v_tipo_documento, 2,'Y'),0),
               COALESCE(cou_consumo_doc_mes(p.m_product_id, w.m_warehouse_id, v_tipo_documento, 3,'Y'),0),
               COALESCE(cou_consumo_doc_mes(p.m_product_id, w.m_warehouse_id, v_tipo_documento, 4,'Y'),0),
               COALESCE(cou_consumo_doc_mes(p.m_product_id, w.m_warehouse_id, v_tipo_documento, 5,'Y'),0),
               cou_consumo_historico(p.m_product_id, w.m_warehouse_id, v_tipo_documento, v_mes_promedio,'Y'),
               coalesce((select sum(t1.MovementQty) from m_product p1, m_transaction t1, m_locator l1 
                 where p1.m_product_id=t1.m_product_id and t1.m_locator_id=l1.m_locator_id 
                   and l1.m_warehouse_id =w.m_warehouse_id and p1.m_product_id =p.m_product_id),0),
                p.value
          FROM m_product_warehouse_qtys_v pwv, m_product p, m_warehouse w 
         WHERE p.m_product_id = pwv.m_product_id
           AND w.m_warehouse_id = pwv.m_warehouse_id
           AND w.m_warehouse_id = v_warehouse_id
           AND p.ad_client_id=v_Client_ID
        GROUP BY p.m_product_id,  w.m_warehouse_id, p.value;
        
        
        update cou_param_buffer 
           set processed = 'Y'
         WHERE cou_param_buffer_id = v_param_buffer_id;

        
        v_Message:='@EjecucionCorrecta@';
        DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished - ' || v_Message) ;
        AD_UPDATE_PINSTANCE(p_PInstance_ID, v_User_ID, 'Y', v_Result, v_Message);
        RETURN;
        
    END;
    EXCEPTION
    WHEN OTHERS THEN
        v_ResultStr:= '@ERROR=' || SQLERRM;
        DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
        
        AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr);
        RETURN;
END COU_GENERAR_DATOS_BUFFER
]]></body>
    </function>
  </database>
