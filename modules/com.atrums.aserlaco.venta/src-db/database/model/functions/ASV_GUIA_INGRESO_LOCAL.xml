<?xml version="1.0"?>
  <database name="FUNCTION ASV_GUIA_INGRESO_LOCAL">
    <function name="ASV_GUIA_INGRESO_LOCAL" type="NULL">
      <parameter name="pedido_inventario_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[v_ad_client_id character varying(32);
    v_ad_org_id character varying(32);
    v_createdby character varying(32);
    v_updatedby character varying(32);
    v_c_bpartner_id character varying(32);
    v_c_bpartner_location_id character varying(32);
    v_asv_cursor RECORD;
    v_m_warehouse_id character varying(32):='';
    v_documentno character varying(30);
    v_pedido_detalle character varying(30);
    v_bnd character(1) := 'Y';
    v_bnd_warehouse character(1) := 'Y';
    v_m_inout_id character varying(32);
    v_c_uom_id character varying(32);
    v_m_locator_id character varying(32);
BEGIN
	--obtengo las variables para los insert
	select ad_client_id into v_ad_client_id from asv_pedido_inventario where asv_pedido_inventario_id = pedido_inventario_id;--cliente
	select ad_org_id into v_ad_org_id from asv_pedido_inventario where asv_pedido_inventario_id = pedido_inventario_id;--local
	select createdby into v_createdby from asv_pedido_inventario where asv_pedido_inventario_id = pedido_inventario_id;--Creador
	select updatedby into v_updatedby from asv_pedido_inventario where asv_pedido_inventario_id = pedido_inventario_id;--Actualizo
	select c_bpartner_id into v_c_bpartner_id from asv_pedido_inventario where asv_pedido_inventario_id = pedido_inventario_id;--Responsable Local
	select c_bpartner_location_id into v_c_bpartner_location_id from c_bpartner_location where c_bpartner_id = v_c_bpartner_id;--DirecciÃ³n del responsable

	FOR v_asv_cursor IN (
		select 
			pi.m_warehouse_id,
			pd.m_product_id,
			pd.recibido,
			pd.asv_pedido_detalle_id
		from 
			asv_pedido_detalle pd,
			asv_pedido_inventario pi
		where 
			pi.asv_pedido_inventario_id = pd.asv_pedido_inventario_id
		and 
			pd.asv_pedido_inventario_id=pedido_inventario_id
		and 
			pd.chk_recibido='Y'
		order by 
			pi.m_warehouse_id asc
		)
	LOOP
		v_m_locator_id := (select 
					m_locator_id 
				from 
					m_locator 
				where 
					m_warehouse_id = v_asv_cursor.m_warehouse_id
				limit 1);
		if v_bnd_warehouse = 'Y' then
			v_m_inout_id := get_uuid();
			Ad_Sequence_Doctype('2030AD7DD4284E2B936E261662EF735A', v_ad_client_id, 'Y', v_documentno);
			INSERT INTO m_inout(
				m_inout_id, 
				ad_client_id, 
				ad_org_id, 
				createdby, 
				updatedby, 
				documentno, 
				docaction, 
				docstatus, 
				c_doctype_id, --Tipo de documento
				movementdate, 
				dateacct, 
				c_bpartner_id, 
				c_bpartner_location_id, 
				m_warehouse_id, 
				deliveryrule, 
				freightcostrule, 
				deliveryviarule, 
				priorityrule, 
				issotrx,processing,
				em_asv_pedido_inventario_id
				)
			VALUES (
				v_m_inout_id, 
				v_ad_client_id, 
				v_ad_org_id, 
				v_createdby, 
				v_updatedby, 
				v_documentno, 
				'CO', 
				'DR', 
				'2030AD7DD4284E2B936E261662EF735A', 
				now(), 
				now(),
				v_c_bpartner_id, 
				'2496DBA1DD844E60934858E7A3DDDCE5', 
				v_asv_cursor.m_warehouse_id, 
				'A', 
				'I', 
				'P', 
				'5',
				'N',
				'N',
				pedido_inventario_id
				);
			v_bnd_warehouse = 'N';
		end if;
		SELECT c_uom_id INTO v_c_uom_id FROM m_product where m_product_id = v_asv_cursor.m_product_id;--Unidad del producto
		INSERT INTO m_inoutline(
			m_inoutline_id, 
			ad_client_id, 
			ad_org_id, 
			createdby, 
			updatedby, 
			line, 
			m_inout_id, 
			m_product_id, 
			c_uom_id, 
			movementqty, 
			c_bpartner_id,
			m_locator_id,
			em_asv_pedido_detalle_id
			)
		VALUES (
			get_uuid(), 
			v_ad_client_id, 
			v_ad_org_id, 
			v_createdby, 
			v_updatedby, 
			10, 
			v_m_inout_id, 
			v_asv_cursor.m_product_id, 
			v_c_uom_id, 
			v_asv_cursor.recibido, 
			v_c_bpartner_id,
			v_m_locator_id,
			v_asv_cursor.asv_pedido_detalle_id
			);
	END LOOP;
	M_INOUT_POST(null,v_m_inout_id);
RETURN;
END ASV_GUIA_INGRESO_LOCAL
]]></body>
    </function>
  </database>
